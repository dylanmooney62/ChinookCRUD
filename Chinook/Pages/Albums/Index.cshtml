@page
@using Entities
@using X.PagedList.Mvc.Core.Common
@using X.PagedList.Web.Common
@model Chinook.Pages.Albums.Index

@{
    ViewData["Title"] = "Albums";
    ViewData["Entity"] = "Album";
}


<partial name="Shared/_Alert" for="Message"/>

<partial name="Shared/_NewHeader"/>


<div class="container-xl">
    <div class="page-body">

        <partial name="Shared/_SearchBar" for="Search"/>

        <div class="col-12">
            <div class="card">
                <div class="table-responsive-md">
                    <table class="table card-table table-vcenter text-nowrap datatable">
                        <thead>
                        <tr>
                            <th>Title</th>
                            <th>Artist</th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (Album album in Model.Albums)
                        {
                            <tr>
                                <td>
                                    <a asp-page="./Detail" asp-route-id="@album.AlbumId" class="text-reset" tabindex="-1">@album.Title</a>
                                </td>
                                <td>
                                    @album.Artist.Name
                                </td>
                                <td class="text-end">
                                    <span class="dropdown">
                                        <button class="btn dropdown-toggle align-text-top" data-bs-boundary="viewport" data-bs-toggle="dropdown" aria-expanded="false">Actions</button>
                                        <div class="dropdown-menu dropdown-menu-end" style="">
                                            <a class="dropdown-item" asp-page="./Edit" asp-route-id="@album.AlbumId">
                                                Edit
                                            </a>
                                            <a class="dropdown-item" href="#">
                                                Delete
                                            </a>
                                        </div>
                                    </span>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                    @if (Model.Albums.Count() > 1)
                    {
                        <div class="card-footer d-flex align-items-center">
                            @Html.PagedListPager((IPagedList) Model.Albums, page => Url.Page("./Index", new {p = page, Model.Search}),
                                new PagedListRenderOptions
                                {
                                    ContainerDivClasses = new[] {"ms-auto"},
                                    UlElementClasses = new[] {"pagination m-0 ms-auto"},
                                    LiElementClasses = new[] {"page-item"},
                                    DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                                    DisplayLinkToLastPage = PagedListDisplayMode.Never,
                                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                    DisplayLinkToNextPage = PagedListDisplayMode.Always,
                                    MaximumPageNumbersToDisplay = 5,
                                    LinkToPreviousPageFormat = @"<svg xmlns=""http://www.w3.org/2000/svg"" class=""icon icon-tabler icon-tabler-chevron-left"" width=""24"" height=""24"" viewBox=""0 0 24 24"" stroke-width=""2"" stroke=""currentColor"" fill=""none"" stroke-linecap=""round"" stroke-linejoin=""round""><path stroke=""none"" d=""M0 0h24v24H0z"" fill=""none""></path><polyline points=""15 6 9 12 15 18""></polyline></svg>prev",
                                    LinkToNextPageFormat = "<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-chevron-right\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n   <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n   <polyline points=\"9 6 15 12 9 18\"></polyline>\n</svg>"
                                })
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


<script src="js/site.js"></script>